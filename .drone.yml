kind: pipeline
name: default

steps:
  
- name: Deploy K3s
  image: alpine
  environment:
    TF_VAR_digitalocean_token:
      from_secret: TF_VAR_digitalocean_token
    TF_VAR_cluster_domain:
      from_secret: TF_VAR_cluster_domain
    TF_VAR_cluster_subdomain:
      from_secret: TF_VAR_cluster_subdomain
    TF_VAR_database_node_count:
      from_secret: TF_VAR_database_node_count
    TF_VAR_controller_peer_count:
      from_secret: TF_VAR_controller_peer_count
    TF_VAR_worker_node_count:
      from_secret: TF_VAR_worker_node_count
  commands:
  - echo "http://dl-3.alpinelinux.org/alpine/edge/testing" | tee -a /etc/apk/repositories
  - apk --update add curl openssh-client jq kubectl bash
  - export TF_VAR_cluster_name=$DRONE_COMMIT
  - export TF_VAR_database_cluster_name=dronedbtest
  - curl --silent --output terraform.zip "https://releases.hashicorp.com/terraform/1.0.9/terraform_1.0.9_linux_amd64.zip"
  - unzip terraform.zip ; rm -f terraform.zip; chmod +x terraform
  - install terraform -c /usr/local/bin/
  - terraform -v
  - terraform init 
  - terraform validate
  - if terraform apply -auto-approve; then echo "Terraform Applied"; else echo "Failed." ; terraform destroy -auto-approve; fi
  - kubectl --kubeconfig=$TF_VAR_cluster_name-config get nodes
  - terraform destroy -auto-approve
